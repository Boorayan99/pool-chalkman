import React, { useState } from "react";
import "./App.css"; // or your styles file

const initialBalls = {
  1: 16, 2: 17,
  3: 6, 4: 6, 5: 6, 6: 6,
  7: 7, 8: 8, 9: 9, 10: 10,
  11: 11, 12: 12, 13: 13, 14: 14, 15: 15
};

export default function App() {
  const [players, setPlayers] = useState([]);
  const [newPlayer, setNewPlayer] = useState("");
  const [scores, setScores] = useState({});
  const [potted, setPotted] = useState([]);
  const [turn, setTurn] = useState(0);
  const [log, setLog] = useState([]);

  const remainingBalls = Object.keys(initialBalls)
    .filter(ball => !potted.includes(Number(ball)))
    .map(Number);

  const lowestBall = Math.min(...remainingBalls);

  const addPlayer = () => {
    if (!newPlayer) return;
    setPlayers([...players, newPlayer]);
    setScores({ ...scores, [newPlayer]: 0 });
    setNewPlayer("");
  };

  const handlePot = (ball) => {
    if (potted.includes(ball)) return;
    const currentPlayer = players[turn];
    const ballPoints = initialBalls[ball];
    setScores({
      ...scores,
      [currentPlayer]: scores[currentPlayer] + ballPoints
    });
    setPotted([...potted, ball]);
    setLog([
      ...log,
      `${currentPlayer} potted Ball ${ball} (+${ballPoints})`
    ]);
  };

  const nextTurn = () => {
    setTurn((turn + 1) % players.length);
  };

  const applyFoul = (penalty) => {
    const currentPlayer = players[turn];
    setScores({
      ...scores,
      [currentPlayer]: scores[currentPlayer] - penalty
    });
    setLog([
      ...log,
      `${currentPlayer} committed a foul (-${penalty})`
    ]);
    nextTurn();
  };

  return (
    <div className="App" style={{ padding: 20 }}>
      <h1>Killer Pool Tracker</h1>

      <div>
        <input
          value={newPlayer}
          onChange={(e) => setNewPlayer(e.target.value)}
          placeholder="Add player name"
        />
        <button onClick={addPlayer}>Add Player</button>
      </div>

      <h2>Players & Scores</h2>
      <ul>
        {players.map((p, i) => (
          <li key={i} style={{ fontWeight: i === turn ? "bold" : "normal" }}>
            {p}: {scores[p]} pts {i === turn && "‚Üê Your turn"}
          </li>
        ))}
      </ul>

      <h3>Lowest Ball: {lowestBall}</h3>

      <h2>Available Balls</h2>
      <div style={{ display: "flex", flexWrap: "wrap", gap: "0.5rem" }}>
        {Object.entries(initialBalls).map(([ball, value]) => (
          <button
            key={ball}
            disabled={potted.includes(Number(ball))}
            onClick={() => handlePot(Number(ball))}
          >
            {ball} ({value})
          </button>
        ))}
      </div>

      <h2>Foul</h2>
      <button onClick={() => applyFoul(2)}>Miss (-2)</button>
      <button onClick={() => applyFoul(4)}>Wrong Ball (-4)</button>
      <button onClick={() => applyFoul(5)}>Scratch (-5)</button>

      <div>
        <button onClick={nextTurn}>End Turn</button>
      </div>

      <h2>Game Log</h2>
      <ul>
        {log.map((entry, idx) => (
          <li key={idx}>{entry}</li>
        ))}
      </ul>
    </div>
  );
}
